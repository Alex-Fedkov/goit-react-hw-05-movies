{"version":3,"file":"static/js/368.40d3feba.chunk.js","mappings":"mQAEaA,EAAMC,EAAAA,GAAAA,KAAH,iDAIHC,EAASD,EAAAA,GAAAA,OAAH,4OAcNE,EAAWF,EAAAA,GAAAA,EAAH,qEAKRG,GAAOH,EAAAA,EAAAA,IAAOE,EAAPF,CAAH,+CAIJI,EAAUJ,EAAAA,GAAAA,IAAH,qEAKPK,EAAOL,EAAAA,GAAAA,IAAH,gEAKJM,EAAUN,EAAAA,GAAAA,GAAH,qE,SC1BdO,EACK,UADLA,EAEM,WAFNA,EAGM,WAkFZ,EA/EsB,WAAO,IAAD,IAClBC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7C,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAAgCR,EAAAA,EAAAA,UAAS,IAAzC,eAAOS,EAAP,KAAiBC,EAAjB,KACA,GAA4BV,EAAAA,EAAAA,UAAS,IAArC,eAAOW,EAAP,KAAeC,EAAf,KACA,GAA4BZ,EAAAA,EAAAA,UAAS,MAArC,eAAOa,EAAP,KAAeC,EAAf,KACA,GAA0Bd,EAAAA,EAAAA,UAAS,MAAnC,eAAOe,EAAP,KAAcC,EAAd,KA4BF,OA1BAC,EAAAA,EAAAA,YAAU,WACV,IAAMC,EAAG,6CAAyCxB,EAAzC,6CACToB,EAAUrB,GACLC,GAELyB,MAAMD,GAAKE,MAAK,SAAAC,GACd,OAAIA,EAASC,GACJD,EAASE,OAETC,QAAQC,OAAO,IAAIC,MAAM,UACnC,IACAN,MAAK,SAACO,GACLzB,EAAUyB,EAAI,aACdvB,EAASuB,EAAKxB,OACdG,EAAQqB,EAAI,cACZnB,EAASmB,EAAI,aAAiBC,QAAQ,IACtClB,EAAYiB,EAAKlB,UACjBG,EAAUe,EAAKhB,QACfG,EAAUrB,EACX,IACAoC,OAAM,SAAAd,GACLC,EAASD,GACTD,EAAUrB,EACX,GACA,GAAE,CAACC,KAGF,UAACT,EAAD,WACG4B,IAAWpB,IAAoB,yBAAMsB,EAAMe,UAC3CjB,IAAWpB,IAAkB,SAACsC,EAAA,EAAD,IAC7BlB,IAAWpB,IAAoB,iCAC9B,SAAC,KAAD,CAAMuC,GAAIpC,EAAV,UAAwB,SAACT,EAAD,CAAQ8C,KAAK,SAAb,wBACxB,UAAC1C,EAAD,YACE,gBAAK2C,IAAG,yCAAoCjC,GAAUkC,IAAI,YAC1D,4BACE,0BAAKhC,EAAL,KAAcE,EAAd,QACA,UAACjB,EAAD,0BAAuBmB,MACvB,SAACnB,EAAD,yBACA,SAACC,EAAD,UAAOoB,KACP,SAACrB,EAAD,uBACA,SAACE,EAAD,UACGqB,EAAOyB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAI5C,4BACE,SAAClD,EAAD,sCACE,UAACG,EAAD,YACE,yBACE,SAAC,KAAD,CAAMwC,GAAG,OAAOlC,MAAO,CAAEC,KAAMH,GAA/B,qBAEF,yBACE,SAAC,KAAD,CAAMoC,GAAG,UAAUlC,MAAO,CAAEC,KAAMH,GAAlC,8BAIR,SAAC,EAAA4C,SAAD,CAAUC,UAAU,+BAAE,SAACV,EAAA,EAAD,MAAtB,UACE,SAAC,KAAD,WAMP,C","sources":["pages/MovieDetails/styles.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Box = styled.main`\n    padding: 10px 40px;\n`;\n\nexport const Button = styled.button`  \n    margin-bottom: 10px;    \n    padding: 5px;\n    font-size: 22px;\n    font-weight: 600;\n\n    &:hover,\n    :focus {\n    background-color: #59d879;\n    cursor: pointer;\n    border-radius: 5px;\n    }\n`;\n\nexport const Subtitle = styled.p`\n    font-size: 20px;\n    font-weight: 700;\n`;\n\nexport const Text = styled(Subtitle)`\n    font-weight: 400;\n`;\n\nexport const TextGen = styled.div`\n    font-size: 20px;\n    font-weight: 400;\n`;\n\nexport const Card = styled.div`\n    display: flex;\n    gap: 15px;\n    `;\n\nexport const DivList = styled.ul`\n    list-style: none;\n    font-size: 20px;\n`;\n","import { Suspense, useEffect, useState } from \"react\";\nimport { Outlet, Link, useParams, useLocation } from \"react-router-dom\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { \n  Box, \n  Button,\n  Subtitle,\n  Card,\n  Text,\n  TextGen,\n  DivList,\n} from \"./styles\"\n\nconst Status = {\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected'\n};\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();  \n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/movies\";\n\n  const [poster, setPoster] = useState('');\n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [score, setScore] = useState(null);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [error, setError] = useState(null);\n  \nuseEffect(() => {\nconst URL = `https://api.themoviedb.org/3/movie/${movieId}?api_key=cfb2a4b5cdc00428d1d82e24b55ad28d`;        \nsetStatus(Status.PENDING);\nif (!movieId) return;\n\nfetch(URL).then(response => {\n  if (response.ok) {         \n    return response.json();\n  }\n    return Promise.reject(new Error('Error!'))\n})\n.then((data) => {           \n  setPoster(data['poster_path']);\n  setTitle(data.title);\n  setDate(data['release_date']);\n  setScore(data['vote_average'].toFixed(1));\n  setOverview(data.overview);\n  setGenres(data.genres);\n  setStatus(Status.RESOLVED);\n})\n.catch(error => {\n  setError(error);\n  setStatus(Status.REJECTED);\n});   \n}, [movieId])\n\nreturn (\n  <Box>\n    {status === Status.REJECTED && (<div>{error.message}</div>)}\n    {status === Status.PENDING && <Loader />}\n    {status === Status.RESOLVED && (<>\n      <Link to={backLinkHref}><Button type=\"button\">Go back</Button></Link>        \n      <Card>\n        <img src={`https://image.tmdb.org/t/p/w200${poster}`} alt='poster' />\n        <div>\n          <h2>{title} ({date})</h2>\n          <Subtitle>User Score: {score}</Subtitle>\n          <Subtitle>Overview:</Subtitle>\n          <Text>{overview}</Text>\n          <Subtitle>Genres:</Subtitle>\n          <TextGen>\n            {genres.map(genre => genre.name).join(', ')}\n          </TextGen>                        \n        </div>\n      </Card>\n      <div>\n        <Text>Additional information</Text>\n          <DivList>\n            <li>\n              <Link to=\"cast\" state={{ from: backLinkHref }}>Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: backLinkHref }}>Reviews</Link>\n            </li>        \n          </DivList>\n      </div> \n      <Suspense fallback={<><Loader/></>}>\n        <Outlet />\n      </Suspense>          \n    </>  \n    )}        \n</Box>\n);\n};\n\nexport default MoviesDetails;"],"names":["Box","styled","Button","Subtitle","Text","TextGen","Card","DivList","Status","movieId","useParams","backLinkHref","useLocation","state","from","useState","poster","setPoster","title","setTitle","date","setDate","score","setScore","overview","setOverview","genres","setGenres","status","setStatus","error","setError","useEffect","URL","fetch","then","response","ok","json","Promise","reject","Error","data","toFixed","catch","message","Loader","to","type","src","alt","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}